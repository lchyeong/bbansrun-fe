name: Deploy Frontend

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build and push Docker image
        run: |
          docker build -t chany91/bbansrun-fe:latest .
          docker push chany91/bbansrun-fe:latest

      - name: Deploy to server
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SERVER_IP: ${{ secrets.SERVER_IP }}
        run: |
          echo "${SSH_PRIVATE_KEY}" > deploy_key
          chmod 600 deploy_key
          ssh -o StrictHostKeyChecking=no -i deploy_key ubuntu@${SERVER_IP} << 'EOF'
            set -e

            cd /var/www

            # 함수 정의: 포트에서 애플리케이션 상태 확인
            check_port() {
              local PORT=$1
              for i in 1 2 3; do
                echo "Checking if application is running on port $PORT (Attempt $i/3)..."
                if curl -f http://localhost:$PORT > /dev/null; then
                  echo "Application is running on port $PORT."
                  return 0
                else
                  echo "Application is not yet running, retrying in 30 seconds..."
                  sleep 30
                fi
              done
              echo "Error: Application failed to start on port $PORT after 3 attempts."
              exit 1
            }

            # 최신 Docker 이미지 가져오기
            docker pull chany91/bbansrun-fe:latest

            # 기존 포트 5173 상태 확인
            if lsof -i:5173 > /dev/null; then
              echo "Port 5173 is currently in use. Preparing to deploy on port 5174."
              PORT=5174
            else
              echo "Port 5173 is free. Deploying on port 5173."
              PORT=5173
            fi
            
            # 새로운 포트에서 애플리케이션 실행
            FRONTEND_PORT=$PORT docker-compose up -d --no-deps bbansrun-fe
            check_port $PORT

            # 5174에서 5173으로 트래픽 전환하기 전 5175에서 준비
            echo "Starting application on port 5175 for temporary fallback."
            FRONTEND_PORT=5175 docker-compose up -d --no-deps bbansrun-fe
            check_port 5175

            # 포트가 정상적으로 구동된 후에만 트래픽 전환
            if [ $PORT -eq 5174 ]; then
              docker stop fe-5173 || true
              docker rm fe-5173 || true

              # 5175에서 서비스 정상 작동 확인 후 5173으로 트래픽 전환
              FRONTEND_PORT=5173 docker-compose up -d --no-deps bbansrun-fe
              
              echo "Stopping temporary instance on port 5175."
              docker stop fe-5175 || true
              docker rm fe-5175 || true
            fi

            echo "Deployment completed successfully on port $PORT."
          EOF
